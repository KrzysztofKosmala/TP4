#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Narciarze
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="C:\\USERS\\SEKWAD\\DESKTOP\\STUDIA\\ZSBD\\NARCIARZE.MDF")]
	public partial class AdventureWorksDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertkraje(kraje instance);
    partial void Updatekraje(kraje instance);
    partial void Deletekraje(kraje instance);
    partial void Insertskocznie(skocznie instance);
    partial void Updateskocznie(skocznie instance);
    partial void Deleteskocznie(skocznie instance);
    partial void Inserttrenerzy(trenerzy instance);
    partial void Updatetrenerzy(trenerzy instance);
    partial void Deletetrenerzy(trenerzy instance);
    partial void Insertuczestnictwa_w_zawodach(uczestnictwa_w_zawodach instance);
    partial void Updateuczestnictwa_w_zawodach(uczestnictwa_w_zawodach instance);
    partial void Deleteuczestnictwa_w_zawodach(uczestnictwa_w_zawodach instance);
    partial void Insertzawodnicy(zawodnicy instance);
    partial void Updatezawodnicy(zawodnicy instance);
    partial void Deletezawodnicy(zawodnicy instance);
    partial void Insertzawody(zawody instance);
    partial void Updatezawody(zawody instance);
    partial void Deletezawody(zawody instance);
    #endregion
		
		public AdventureWorksDataContext() : 
				base(global::Narciarze.Properties.Settings.Default.C__USERS_SEKWAD_DESKTOP_STUDIA_ZSBD_NARCIARZE_MDFConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public AdventureWorksDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<kraje> kraje
		{
			get
			{
				return this.GetTable<kraje>();
			}
		}
		
		public System.Data.Linq.Table<skocznie> skocznie
		{
			get
			{
				return this.GetTable<skocznie>();
			}
		}
		
		public System.Data.Linq.Table<trenerzy> trenerzy
		{
			get
			{
				return this.GetTable<trenerzy>();
			}
		}
		
		public System.Data.Linq.Table<uczestnictwa_w_zawodach> uczestnictwa_w_zawodach
		{
			get
			{
				return this.GetTable<uczestnictwa_w_zawodach>();
			}
		}
		
		public System.Data.Linq.Table<zawodnicy> zawodnicy
		{
			get
			{
				return this.GetTable<zawodnicy>();
			}
		}
		
		public System.Data.Linq.Table<zawody> zawody
		{
			get
			{
				return this.GetTable<zawody>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.kraje")]
	public partial class kraje : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_kraju;
		
		private string _kraj;
		
		private EntitySet<skocznie> _skocznie;
		
		private EntitySet<trenerzy> _trenerzy;
		
		private EntitySet<zawodnicy> _zawodnicy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_krajuChanging(int value);
    partial void Onid_krajuChanged();
    partial void OnkrajChanging(string value);
    partial void OnkrajChanged();
    #endregion
		
		public kraje()
		{
			this._skocznie = new EntitySet<skocznie>(new Action<skocznie>(this.attach_skocznie), new Action<skocznie>(this.detach_skocznie));
			this._trenerzy = new EntitySet<trenerzy>(new Action<trenerzy>(this.attach_trenerzy), new Action<trenerzy>(this.detach_trenerzy));
			this._zawodnicy = new EntitySet<zawodnicy>(new Action<zawodnicy>(this.attach_zawodnicy), new Action<zawodnicy>(this.detach_zawodnicy));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kraju", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_kraju
		{
			get
			{
				return this._id_kraju;
			}
			set
			{
				if ((this._id_kraju != value))
				{
					this.Onid_krajuChanging(value);
					this.SendPropertyChanging();
					this._id_kraju = value;
					this.SendPropertyChanged("id_kraju");
					this.Onid_krajuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_kraj", DbType="Char(3) NOT NULL", CanBeNull=false)]
		public string kraj
		{
			get
			{
				return this._kraj;
			}
			set
			{
				if ((this._kraj != value))
				{
					this.OnkrajChanging(value);
					this.SendPropertyChanging();
					this._kraj = value;
					this.SendPropertyChanged("kraj");
					this.OnkrajChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kraje_skocznie", Storage="_skocznie", ThisKey="id_kraju", OtherKey="id_kraju")]
		public EntitySet<skocznie> skocznie
		{
			get
			{
				return this._skocznie;
			}
			set
			{
				this._skocznie.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kraje_trenerzy", Storage="_trenerzy", ThisKey="id_kraju", OtherKey="id_kraju")]
		public EntitySet<trenerzy> trenerzy
		{
			get
			{
				return this._trenerzy;
			}
			set
			{
				this._trenerzy.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kraje_zawodnicy", Storage="_zawodnicy", ThisKey="id_kraju", OtherKey="id_kraju")]
		public EntitySet<zawodnicy> zawodnicy
		{
			get
			{
				return this._zawodnicy;
			}
			set
			{
				this._zawodnicy.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_skocznie(skocznie entity)
		{
			this.SendPropertyChanging();
			entity.kraje = this;
		}
		
		private void detach_skocznie(skocznie entity)
		{
			this.SendPropertyChanging();
			entity.kraje = null;
		}
		
		private void attach_trenerzy(trenerzy entity)
		{
			this.SendPropertyChanging();
			entity.kraje = this;
		}
		
		private void detach_trenerzy(trenerzy entity)
		{
			this.SendPropertyChanging();
			entity.kraje = null;
		}
		
		private void attach_zawodnicy(zawodnicy entity)
		{
			this.SendPropertyChanging();
			entity.kraje = this;
		}
		
		private void detach_zawodnicy(zawodnicy entity)
		{
			this.SendPropertyChanging();
			entity.kraje = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.skocznie")]
	public partial class skocznie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_skoczni;
		
		private string _miasto;
		
		private int _id_kraju;
		
		private string _nazwa;
		
		private System.Nullable<int> _k;
		
		private System.Nullable<int> _sedz;
		
		private EntitySet<zawody> _zawody;
		
		private EntityRef<kraje> _kraje;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_skoczniChanging(int value);
    partial void Onid_skoczniChanged();
    partial void OnmiastoChanging(string value);
    partial void OnmiastoChanged();
    partial void Onid_krajuChanging(int value);
    partial void Onid_krajuChanged();
    partial void OnnazwaChanging(string value);
    partial void OnnazwaChanged();
    partial void OnkChanging(System.Nullable<int> value);
    partial void OnkChanged();
    partial void OnsedzChanging(System.Nullable<int> value);
    partial void OnsedzChanged();
    #endregion
		
		public skocznie()
		{
			this._zawody = new EntitySet<zawody>(new Action<zawody>(this.attach_zawody), new Action<zawody>(this.detach_zawody));
			this._kraje = default(EntityRef<kraje>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_skoczni", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_skoczni
		{
			get
			{
				return this._id_skoczni;
			}
			set
			{
				if ((this._id_skoczni != value))
				{
					this.Onid_skoczniChanging(value);
					this.SendPropertyChanging();
					this._id_skoczni = value;
					this.SendPropertyChanged("id_skoczni");
					this.Onid_skoczniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_miasto", DbType="VarChar(36)")]
		public string miasto
		{
			get
			{
				return this._miasto;
			}
			set
			{
				if ((this._miasto != value))
				{
					this.OnmiastoChanging(value);
					this.SendPropertyChanging();
					this._miasto = value;
					this.SendPropertyChanged("miasto");
					this.OnmiastoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kraju", DbType="Int NOT NULL")]
		public int id_kraju
		{
			get
			{
				return this._id_kraju;
			}
			set
			{
				if ((this._id_kraju != value))
				{
					if (this._kraje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_krajuChanging(value);
					this.SendPropertyChanging();
					this._id_kraju = value;
					this.SendPropertyChanged("id_kraju");
					this.Onid_krajuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwa", DbType="VarChar(36)")]
		public string nazwa
		{
			get
			{
				return this._nazwa;
			}
			set
			{
				if ((this._nazwa != value))
				{
					this.OnnazwaChanging(value);
					this.SendPropertyChanging();
					this._nazwa = value;
					this.SendPropertyChanged("nazwa");
					this.OnnazwaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_k", DbType="Int")]
		public System.Nullable<int> k
		{
			get
			{
				return this._k;
			}
			set
			{
				if ((this._k != value))
				{
					this.OnkChanging(value);
					this.SendPropertyChanging();
					this._k = value;
					this.SendPropertyChanged("k");
					this.OnkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sedz", DbType="Int")]
		public System.Nullable<int> sedz
		{
			get
			{
				return this._sedz;
			}
			set
			{
				if ((this._sedz != value))
				{
					this.OnsedzChanging(value);
					this.SendPropertyChanging();
					this._sedz = value;
					this.SendPropertyChanged("sedz");
					this.OnsedzChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skocznie_zawody", Storage="_zawody", ThisKey="id_skoczni", OtherKey="id_skoczni")]
		public EntitySet<zawody> zawody
		{
			get
			{
				return this._zawody;
			}
			set
			{
				this._zawody.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kraje_skocznie", Storage="_kraje", ThisKey="id_kraju", OtherKey="id_kraju", IsForeignKey=true)]
		public kraje kraje
		{
			get
			{
				return this._kraje.Entity;
			}
			set
			{
				kraje previousValue = this._kraje.Entity;
				if (((previousValue != value) 
							|| (this._kraje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._kraje.Entity = null;
						previousValue.skocznie.Remove(this);
					}
					this._kraje.Entity = value;
					if ((value != null))
					{
						value.skocznie.Add(this);
						this._id_kraju = value.id_kraju;
					}
					else
					{
						this._id_kraju = default(int);
					}
					this.SendPropertyChanged("kraje");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_zawody(zawody entity)
		{
			this.SendPropertyChanging();
			entity.skocznie = this;
		}
		
		private void detach_zawody(zawody entity)
		{
			this.SendPropertyChanging();
			entity.skocznie = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.trenerzy")]
	public partial class trenerzy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_trenera;
		
		private int _id_kraju;
		
		private string _imie_t;
		
		private string _nazwisko_t;
		
		private System.Nullable<System.DateTime> _data_ur_t;
		
		private EntityRef<kraje> _kraje;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_treneraChanging(int value);
    partial void Onid_treneraChanged();
    partial void Onid_krajuChanging(int value);
    partial void Onid_krajuChanged();
    partial void Onimie_tChanging(string value);
    partial void Onimie_tChanged();
    partial void Onnazwisko_tChanging(string value);
    partial void Onnazwisko_tChanged();
    partial void Ondata_ur_tChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_ur_tChanged();
    #endregion
		
		public trenerzy()
		{
			this._kraje = default(EntityRef<kraje>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_trenera", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_trenera
		{
			get
			{
				return this._id_trenera;
			}
			set
			{
				if ((this._id_trenera != value))
				{
					this.Onid_treneraChanging(value);
					this.SendPropertyChanging();
					this._id_trenera = value;
					this.SendPropertyChanged("id_trenera");
					this.Onid_treneraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kraju", DbType="Int NOT NULL")]
		public int id_kraju
		{
			get
			{
				return this._id_kraju;
			}
			set
			{
				if ((this._id_kraju != value))
				{
					if (this._kraje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_krajuChanging(value);
					this.SendPropertyChanging();
					this._id_kraju = value;
					this.SendPropertyChanged("id_kraju");
					this.Onid_krajuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie_t", DbType="VarChar(36)")]
		public string imie_t
		{
			get
			{
				return this._imie_t;
			}
			set
			{
				if ((this._imie_t != value))
				{
					this.Onimie_tChanging(value);
					this.SendPropertyChanging();
					this._imie_t = value;
					this.SendPropertyChanged("imie_t");
					this.Onimie_tChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko_t", DbType="VarChar(36)")]
		public string nazwisko_t
		{
			get
			{
				return this._nazwisko_t;
			}
			set
			{
				if ((this._nazwisko_t != value))
				{
					this.Onnazwisko_tChanging(value);
					this.SendPropertyChanging();
					this._nazwisko_t = value;
					this.SendPropertyChanged("nazwisko_t");
					this.Onnazwisko_tChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_ur_t", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> data_ur_t
		{
			get
			{
				return this._data_ur_t;
			}
			set
			{
				if ((this._data_ur_t != value))
				{
					this.Ondata_ur_tChanging(value);
					this.SendPropertyChanging();
					this._data_ur_t = value;
					this.SendPropertyChanged("data_ur_t");
					this.Ondata_ur_tChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kraje_trenerzy", Storage="_kraje", ThisKey="id_kraju", OtherKey="id_kraju", IsForeignKey=true)]
		public kraje kraje
		{
			get
			{
				return this._kraje.Entity;
			}
			set
			{
				kraje previousValue = this._kraje.Entity;
				if (((previousValue != value) 
							|| (this._kraje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._kraje.Entity = null;
						previousValue.trenerzy.Remove(this);
					}
					this._kraje.Entity = value;
					if ((value != null))
					{
						value.trenerzy.Add(this);
						this._id_kraju = value.id_kraju;
					}
					else
					{
						this._id_kraju = default(int);
					}
					this.SendPropertyChanged("kraje");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.uczestnictwa_w_zawodach")]
	public partial class uczestnictwa_w_zawodach : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_zawodow;
		
		private int _id_skoczka;
		
		private EntityRef<zawodnicy> _zawodnicy;
		
		private EntityRef<zawody> _zawody;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_zawodowChanging(int value);
    partial void Onid_zawodowChanged();
    partial void Onid_skoczkaChanging(int value);
    partial void Onid_skoczkaChanged();
    #endregion
		
		public uczestnictwa_w_zawodach()
		{
			this._zawodnicy = default(EntityRef<zawodnicy>);
			this._zawody = default(EntityRef<zawody>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zawodow", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_zawodow
		{
			get
			{
				return this._id_zawodow;
			}
			set
			{
				if ((this._id_zawodow != value))
				{
					if (this._zawody.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_zawodowChanging(value);
					this.SendPropertyChanging();
					this._id_zawodow = value;
					this.SendPropertyChanged("id_zawodow");
					this.Onid_zawodowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_skoczka", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id_skoczka
		{
			get
			{
				return this._id_skoczka;
			}
			set
			{
				if ((this._id_skoczka != value))
				{
					if (this._zawodnicy.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_skoczkaChanging(value);
					this.SendPropertyChanging();
					this._id_skoczka = value;
					this.SendPropertyChanged("id_skoczka");
					this.Onid_skoczkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zawodnicy_uczestnictwa_w_zawodach", Storage="_zawodnicy", ThisKey="id_skoczka", OtherKey="id_skoczka", IsForeignKey=true)]
		public zawodnicy zawodnicy
		{
			get
			{
				return this._zawodnicy.Entity;
			}
			set
			{
				zawodnicy previousValue = this._zawodnicy.Entity;
				if (((previousValue != value) 
							|| (this._zawodnicy.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zawodnicy.Entity = null;
						previousValue.uczestnictwa_w_zawodach.Remove(this);
					}
					this._zawodnicy.Entity = value;
					if ((value != null))
					{
						value.uczestnictwa_w_zawodach.Add(this);
						this._id_skoczka = value.id_skoczka;
					}
					else
					{
						this._id_skoczka = default(int);
					}
					this.SendPropertyChanged("zawodnicy");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zawody_uczestnictwa_w_zawodach", Storage="_zawody", ThisKey="id_zawodow", OtherKey="id_zawodow", IsForeignKey=true)]
		public zawody zawody
		{
			get
			{
				return this._zawody.Entity;
			}
			set
			{
				zawody previousValue = this._zawody.Entity;
				if (((previousValue != value) 
							|| (this._zawody.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._zawody.Entity = null;
						previousValue.uczestnictwa_w_zawodach.Remove(this);
					}
					this._zawody.Entity = value;
					if ((value != null))
					{
						value.uczestnictwa_w_zawodach.Add(this);
						this._id_zawodow = value.id_zawodow;
					}
					else
					{
						this._id_zawodow = default(int);
					}
					this.SendPropertyChanged("zawody");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zawodnicy")]
	public partial class zawodnicy : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_skoczka;
		
		private string _imie;
		
		private string _nazwisko;
		
		private int _id_kraju;
		
		private System.Nullable<System.DateTime> _data_ur;
		
		private System.Nullable<int> _wzrost;
		
		private System.Nullable<int> _waga;
		
		private EntitySet<uczestnictwa_w_zawodach> _uczestnictwa_w_zawodach;
		
		private EntityRef<kraje> _kraje;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_skoczkaChanging(int value);
    partial void Onid_skoczkaChanged();
    partial void OnimieChanging(string value);
    partial void OnimieChanged();
    partial void OnnazwiskoChanging(string value);
    partial void OnnazwiskoChanged();
    partial void Onid_krajuChanging(int value);
    partial void Onid_krajuChanged();
    partial void Ondata_urChanging(System.Nullable<System.DateTime> value);
    partial void Ondata_urChanged();
    partial void OnwzrostChanging(System.Nullable<int> value);
    partial void OnwzrostChanged();
    partial void OnwagaChanging(System.Nullable<int> value);
    partial void OnwagaChanged();
    #endregion
		
		public zawodnicy()
		{
			this._uczestnictwa_w_zawodach = new EntitySet<uczestnictwa_w_zawodach>(new Action<uczestnictwa_w_zawodach>(this.attach_uczestnictwa_w_zawodach), new Action<uczestnictwa_w_zawodach>(this.detach_uczestnictwa_w_zawodach));
			this._kraje = default(EntityRef<kraje>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_skoczka", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_skoczka
		{
			get
			{
				return this._id_skoczka;
			}
			set
			{
				if ((this._id_skoczka != value))
				{
					this.Onid_skoczkaChanging(value);
					this.SendPropertyChanging();
					this._id_skoczka = value;
					this.SendPropertyChanged("id_skoczka");
					this.Onid_skoczkaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imie", DbType="VarChar(36)")]
		public string imie
		{
			get
			{
				return this._imie;
			}
			set
			{
				if ((this._imie != value))
				{
					this.OnimieChanging(value);
					this.SendPropertyChanging();
					this._imie = value;
					this.SendPropertyChanged("imie");
					this.OnimieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nazwisko", DbType="VarChar(36)")]
		public string nazwisko
		{
			get
			{
				return this._nazwisko;
			}
			set
			{
				if ((this._nazwisko != value))
				{
					this.OnnazwiskoChanging(value);
					this.SendPropertyChanging();
					this._nazwisko = value;
					this.SendPropertyChanged("nazwisko");
					this.OnnazwiskoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_kraju", DbType="Int NOT NULL")]
		public int id_kraju
		{
			get
			{
				return this._id_kraju;
			}
			set
			{
				if ((this._id_kraju != value))
				{
					if (this._kraje.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_krajuChanging(value);
					this.SendPropertyChanging();
					this._id_kraju = value;
					this.SendPropertyChanged("id_kraju");
					this.Onid_krajuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_data_ur", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> data_ur
		{
			get
			{
				return this._data_ur;
			}
			set
			{
				if ((this._data_ur != value))
				{
					this.Ondata_urChanging(value);
					this.SendPropertyChanging();
					this._data_ur = value;
					this.SendPropertyChanged("data_ur");
					this.Ondata_urChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_wzrost", DbType="Int")]
		public System.Nullable<int> wzrost
		{
			get
			{
				return this._wzrost;
			}
			set
			{
				if ((this._wzrost != value))
				{
					this.OnwzrostChanging(value);
					this.SendPropertyChanging();
					this._wzrost = value;
					this.SendPropertyChanged("wzrost");
					this.OnwzrostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_waga", DbType="Int")]
		public System.Nullable<int> waga
		{
			get
			{
				return this._waga;
			}
			set
			{
				if ((this._waga != value))
				{
					this.OnwagaChanging(value);
					this.SendPropertyChanging();
					this._waga = value;
					this.SendPropertyChanged("waga");
					this.OnwagaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zawodnicy_uczestnictwa_w_zawodach", Storage="_uczestnictwa_w_zawodach", ThisKey="id_skoczka", OtherKey="id_skoczka")]
		public EntitySet<uczestnictwa_w_zawodach> uczestnictwa_w_zawodach
		{
			get
			{
				return this._uczestnictwa_w_zawodach;
			}
			set
			{
				this._uczestnictwa_w_zawodach.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="kraje_zawodnicy", Storage="_kraje", ThisKey="id_kraju", OtherKey="id_kraju", IsForeignKey=true)]
		public kraje kraje
		{
			get
			{
				return this._kraje.Entity;
			}
			set
			{
				kraje previousValue = this._kraje.Entity;
				if (((previousValue != value) 
							|| (this._kraje.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._kraje.Entity = null;
						previousValue.zawodnicy.Remove(this);
					}
					this._kraje.Entity = value;
					if ((value != null))
					{
						value.zawodnicy.Add(this);
						this._id_kraju = value.id_kraju;
					}
					else
					{
						this._id_kraju = default(int);
					}
					this.SendPropertyChanged("kraje");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uczestnictwa_w_zawodach(uczestnictwa_w_zawodach entity)
		{
			this.SendPropertyChanging();
			entity.zawodnicy = this;
		}
		
		private void detach_uczestnictwa_w_zawodach(uczestnictwa_w_zawodach entity)
		{
			this.SendPropertyChanging();
			entity.zawodnicy = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.zawody")]
	public partial class zawody : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id_zawodow;
		
		private int _id_skoczni;
		
		private System.Nullable<System.DateTime> _DATA;
		
		private EntitySet<uczestnictwa_w_zawodach> _uczestnictwa_w_zawodach;
		
		private EntityRef<skocznie> _skocznie;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_zawodowChanging(int value);
    partial void Onid_zawodowChanged();
    partial void Onid_skoczniChanging(int value);
    partial void Onid_skoczniChanged();
    partial void OnDATAChanging(System.Nullable<System.DateTime> value);
    partial void OnDATAChanged();
    #endregion
		
		public zawody()
		{
			this._uczestnictwa_w_zawodach = new EntitySet<uczestnictwa_w_zawodach>(new Action<uczestnictwa_w_zawodach>(this.attach_uczestnictwa_w_zawodach), new Action<uczestnictwa_w_zawodach>(this.detach_uczestnictwa_w_zawodach));
			this._skocznie = default(EntityRef<skocznie>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_zawodow", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id_zawodow
		{
			get
			{
				return this._id_zawodow;
			}
			set
			{
				if ((this._id_zawodow != value))
				{
					this.Onid_zawodowChanging(value);
					this.SendPropertyChanging();
					this._id_zawodow = value;
					this.SendPropertyChanged("id_zawodow");
					this.Onid_zawodowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_skoczni", DbType="Int NOT NULL")]
		public int id_skoczni
		{
			get
			{
				return this._id_skoczni;
			}
			set
			{
				if ((this._id_skoczni != value))
				{
					if (this._skocznie.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_skoczniChanging(value);
					this.SendPropertyChanging();
					this._id_skoczni = value;
					this.SendPropertyChanged("id_skoczni");
					this.Onid_skoczniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DATA", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> DATA
		{
			get
			{
				return this._DATA;
			}
			set
			{
				if ((this._DATA != value))
				{
					this.OnDATAChanging(value);
					this.SendPropertyChanging();
					this._DATA = value;
					this.SendPropertyChanged("DATA");
					this.OnDATAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="zawody_uczestnictwa_w_zawodach", Storage="_uczestnictwa_w_zawodach", ThisKey="id_zawodow", OtherKey="id_zawodow")]
		public EntitySet<uczestnictwa_w_zawodach> uczestnictwa_w_zawodach
		{
			get
			{
				return this._uczestnictwa_w_zawodach;
			}
			set
			{
				this._uczestnictwa_w_zawodach.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="skocznie_zawody", Storage="_skocznie", ThisKey="id_skoczni", OtherKey="id_skoczni", IsForeignKey=true)]
		public skocznie skocznie
		{
			get
			{
				return this._skocznie.Entity;
			}
			set
			{
				skocznie previousValue = this._skocznie.Entity;
				if (((previousValue != value) 
							|| (this._skocznie.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._skocznie.Entity = null;
						previousValue.zawody.Remove(this);
					}
					this._skocznie.Entity = value;
					if ((value != null))
					{
						value.zawody.Add(this);
						this._id_skoczni = value.id_skoczni;
					}
					else
					{
						this._id_skoczni = default(int);
					}
					this.SendPropertyChanged("skocznie");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_uczestnictwa_w_zawodach(uczestnictwa_w_zawodach entity)
		{
			this.SendPropertyChanging();
			entity.zawody = this;
		}
		
		private void detach_uczestnictwa_w_zawodach(uczestnictwa_w_zawodach entity)
		{
			this.SendPropertyChanging();
			entity.zawody = null;
		}
	}
}
#pragma warning restore 1591
